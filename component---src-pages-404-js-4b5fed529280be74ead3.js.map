{"version":3,"file":"component---src-pages-404-js-4b5fed529280be74ead3.js","mappings":"uJA6CA,IA1CeA,IAAoC,IAAnC,SAAEC,EAAQ,MAAEC,EAAK,SAAEC,GAAUH,EAC3C,MACMI,EAD6B,MAChBH,EAASI,SAiB5B,OACEC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,UAAQC,UAAU,iBAChBD,EAAAA,cAAA,MAAIC,UAAU,gBACZD,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAG,KAAI,UAGjBH,EAAAA,cAAA,OAAKC,UAAU,iBAAiB,oBAAmBH,GACjDE,EAAAA,cAAA,YAAOH,GACPG,EAAAA,cAAA,cAAQ,wBAENA,EAAAA,cAAA,KACEI,KAAK,kDACLH,UAAU,cACX,yBAKJ,C,+CCFP,IA7BYP,IAAuC,IAADW,EAAA,IAArC,YAAEC,EAAW,MAAEV,EAAK,SAAEC,GAAUH,EAC3C,MAAM,KAAEa,IAASC,EAAAA,EAAAA,gBAAe,cAa1BC,EAAkBH,GAAeC,EAAKG,aAAaJ,YACnDK,EAAgC,QAApBN,EAAGE,EAAKG,oBAAY,IAAAL,OAAA,EAAjBA,EAAmBT,MAExC,OACEI,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQW,EAAkBf,EAAK,MAAMe,EAAiBf,GACtDI,EAAAA,cAAA,QAAMY,KAAK,cAAcC,QAASJ,IAClCT,EAAAA,cAAA,QAAMc,SAAS,WAAWD,QAASjB,IACnCI,EAAAA,cAAA,QAAMc,SAAS,iBAAiBD,QAASJ,IACzCT,EAAAA,cAAA,QAAMc,SAAS,UAAUD,QAAQ,YAChChB,EACA,C,kGC7BP,MAWakB,EAAOA,IAAMf,EAAAA,cAACgB,EAAAA,EAAG,CAACpB,MAAM,mBAErC,UAbqBF,IAAyB,IAAxB,KAAEuB,EAAI,SAAEtB,GAAUD,EACtC,MAAMwB,EAAYD,EAAKV,KAAKG,aAAad,MAEzC,OACEI,EAAAA,cAACmB,EAAAA,EAAM,CAACxB,SAAUA,EAAUC,MAAOsB,GACjClB,EAAAA,cAAA,UAAI,kBACJA,EAAAA,cAAA,SAAG,2DACI,C","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import * as React from 'react';\nimport { Link } from 'gatsby';\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`;\n  const isRootPath = location.pathname === rootPath;\n  let header;\n\n  // if (isRootPath) {\n  //   header = (\n  //     <h1 className=\"main-heading\">\n  //       <Link to=\"/\">{title}</Link>\n  //     </h1>\n  //   );\n  // } else {\n  //   header = (\n  //     <Link className=\"header-link-home\" to=\"/\">\n  //       {title}\n  //     </Link>\n  //   );\n  // }\n\n  return (\n    <>\n      <header className=\"global-header\">\n        <h2 className=\"main-heading\">\n          <Link to=\"/\">메인으로</Link>\n        </h2>\n      </header>\n      <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n        <main>{children}</main>\n        <footer>\n          © Junghoe, Built with\n          <a\n            href=\"https://github.com/gatsbyjs/gatsby-starter-blog\"\n            className=\"staterLink\"\n          >\n            gatsby-starter-blog\n          </a>\n        </footer>\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      {children}\n    </>\n  );\n};\n\nexport default Seo;\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["_ref","location","title","children","isRootPath","pathname","React","className","Link","to","href","_site$siteMetadata","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","Head","Seo","data","siteTitle","Layout"],"sourceRoot":""}