{"version":3,"file":"component---src-pages-404-tsx-45ae29210ec059962325.js","mappings":"uJAiDA,IAjCgCA,IAAuC,IAADC,EAAA,IAArC,YAAEC,EAAW,MAAEC,EAAK,SAAEC,GAAUJ,EAC/D,MAAM,KAAEK,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBL,GAAeG,EAAKG,aAAaN,aACnD,KAAEO,GAASJ,EAAKG,aAAaE,OAC7BC,EAAkBF,EAAI,KAAqB,QAArBR,EAAII,EAAKG,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBE,OAEnD,OACES,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAWT,EAAK,MAAMQ,GACtBC,EAAAA,cAAA,QAAMH,KAAK,cAAcI,QAASN,IAClCK,EAAAA,cAAA,QAAME,SAAS,WAAWD,QAASV,IACnCS,EAAAA,cAAA,QAAME,SAAS,iBAAiBD,QAASN,IACzCK,EAAAA,cAAA,QAAME,SAAS,UAAUD,QAAQ,YAChCT,EACA,C,mGCvCP,MAWaW,EAAOA,IAAMH,EAAAA,cAACI,EAAAA,EAAG,CAACb,MAAM,mBAErC,UAbqBH,IAAwB,IAAvB,KAAEiB,EAAI,SAAEC,GAAUlB,EACtC,MAAMmB,EAAYF,EAAKZ,KAAKG,aAAaL,MAEzC,OACES,EAAAA,cAACQ,EAAAA,EAAM,CAACF,SAAUA,EAAUf,MAAOgB,GACjCP,EAAAA,cAAA,UAAI,kBACJA,EAAAA,cAAA,SAAG,2DACI,C","sources":["webpack://gatsby-starter-blog/./src/components/seo.tsx","webpack://gatsby-starter-blog/./src/pages/404.tsx"],"sourcesContent":["/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\ninterface SeoProps {\n  description?: string;\n  title: string;\n  children?: any;\n}\n\nconst Seo: React.FC<SeoProps> = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            author {\n              name\n            }\n            description\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const { name } = site.siteMetadata.author;\n  const defaultTitle = `${name} ${site.siteMetadata?.title}`;\n\n  return (\n    <>\n      <title>{`${title} | ${defaultTitle}`}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      {children}\n    </>\n  );\n};\n\nexport default Seo;\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from '@/components/layout';\nimport Seo from '@/components/seo';\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  );\n};\n\nexport const Head = () => <Seo title=\"404: Not Found\" />;\n\nexport default NotFoundPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_ref","_site$siteMetadata","description","title","children","site","useStaticQuery","metaDescription","siteMetadata","name","author","defaultTitle","React","content","property","Head","Seo","data","location","siteTitle","Layout"],"sourceRoot":""}